version: '2'

services:
  backend:
    build: builds/backend
    volumes:
      - ${BACKEND_PATH}:/var/www/flex-spa/backend-app
    environment:
      CI_STAGE: ${CI_STAGE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      MEMCACHED_HOST: ${MEMCACHED_HOST}
      MEMCACHED_PORT: ${MEMCACHED_PORT}
      STATSD_HOST: ${STATSD_HOST}
      STATSD_PORT: ${STATSD_PORT}
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      MAILER_URL: ${MAILER_URL}
      SENTRY_DSN: ${SENTRY_DSN}
      API_JWT_PASSPHRASE: ${API_JWT_PASSPHRASE}

  backend_web:
    restart: unless-stopped
    extends: backend
    ports:
      - 9000:9000
    links:
      - mysql:${MYSQL_HOST}
      - redis:${REDIS_HOST}
      - memcached:${MEMCACHED_HOST}
      - elasticsearch:${ELASTICSEARCH_HOST}
      - rabbitmq:${RABBITMQ_HOST}
      - grafana:${STATSD_HOST}
      - sentry_web:${SENTRY_HOST}
    volumes:
      - ${BACKEND_PATH}:/var/www/flex-spa/backend-app
    command: php-fpm

  backend_worker:
    restart: unless-stopped
    extends: backend
    links:
      - mysql:${MYSQL_HOST}
      - redis:${REDIS_HOST}
      - memcached:${MEMCACHED_HOST}
      - elasticsearch:${ELASTICSEARCH_HOST}
      - rabbitmq:${RABBITMQ_HOST}
    volumes:
      - ${BACKEND_PATH}:/var/www/flex-spa/backend-app
      - ./log/supervisor:/var/log/supervisor
    command: bash -c 'cp /var/www/flex-spa/backend-app/config/workers/* /etc/supervisord/ && supervisord'

  backend_cron:
    restart: unless-stopped
    extends: backend
    links:
      - mysql:${MYSQL_HOST}
      - redis:${REDIS_HOST}
      - memcached:${MEMCACHED_HOST}
      - elasticsearch:${ELASTICSEARCH_HOST}
    volumes:
      - ${BACKEND_PATH}:/var/www/flex-spa/backend-app
      - ./log/cron:/var/log
    command: bash -c 'cron && tail -f /var/log/backend-cron.log'

  frontend:
    build: builds/frontend
    volumes:
      - ${FRONTEND_PATH}:/var/app
    command: bash -c 'npm i && npm run build && npm run start'
    ports:
      - 1337:1337

  nginx:
    build: builds/nginx
    ports:
      - ${APP_PORT}:80
    links:
      - backend_web
      - frontend
    volumes:
      - ${BACKEND_PATH}:/var/www/flex-spa/backend-app
      - ./log/nginx:/var/log/nginx

  mysql:
    image: mysql:5.7
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306

  redis:
    image: redis:alpine
    ports:
      - ${REDIS_PORT}:6379

  memcached:
    image: memcached:alpine
    ports:
      - ${MEMCACHED_PORT}:11211

  elasticsearch:
    image: elasticsearch:alpine
    ports:
      - ${ELASTICSEARCH_PORT}:9200
      - 9300:9300 #node communication

  rabbitmq:
    image: rabbitmq:3.7.3-management-alpine
    ports:
      - ${RABBITMQ_PORT}:5672
      - 15672:15672 #management listener
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  phpmemadmin:
    build: builds/phpmemadmin
    ports:
      - ${PHPMEMADMIN_PORT}:80
    environment:
      MEMCACHED_HOST: ${MEMCACHED_HOST}
      MEMCACHED_PORT: ${MEMCACHED_PORT}
    links:
      - memcached:${MEMCACHED_HOST}

  phpredisadmin:
    build: builds/phpredisadmin
    environment:
      - ADMIN_USER=admin
      - ADMIN_PASS=admin
      - REDIS_1_HOST=${REDIS_HOST}
      - REDIS_1_PORT=${REDIS_PORT}
    links:
      - redis:${REDIS_HOST}
    ports:
      - ${PHPREDISADMIN_PORT}:80

  elastichq:
    image: alcohol/elastic-hq:latest
    ports:
      - ${ELASTICHQ_PORT}:5000
    links:
      - elasticsearch:${ELASTICSEARCH_HOST}

  grafana:
    image: kamon/grafana_graphite
    ports:
      - ${GRAFANA_PORT}:80
      - ${GRAPHITE_PORT}:81
      - ${STATSD_PORT}:8125/udp
      - 8126:8126 #statsd admin port
      - 2003:2003 #graphite data port
    volumes:
      - ./data/whisper:/opt/graphite/storage/whisper
      - ./data/grafana:/opt/grafana/data
      - ./log/graphite:/opt/graphite/storage/log
      - ./log/supervisor:/var/log/supervisor

  sentry:
    restart: unless-stopped
    image: sentry:8.22-onbuild
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_MEMCACHED_HOST: sentry_memcached
      SENTRY_REDIS_HOST: sentry_redis
      SENTRY_POSTGRES_HOST: sentry_postgres
      SENTRY_EMAIL_HOST: sentry_smtp
    volumes:
      - ./data/sentry:/var/lib/sentry/files

  sentry_memcached:
    restart: unless-stopped
    image: memcached:1.4

  sentry_redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  sentry_postgres:
    restart: unless-stopped
    image: postgres:9.5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  sentry_smtp:
    restart: unless-stopped
    image: tianon/exim4

  sentry_web:
    restart: unless-stopped
    extends: sentry
    links:
      - sentry_memcached
      - sentry_redis
      - sentry_postgres
      - sentry_smtp
    ports:
      - ${SENTRY_PORT}:9000

  sentry_cron:
    restart: unless-stopped
    extends: sentry
    links:
      - sentry_memcached
      - sentry_redis
      - sentry_postgres
      - sentry_smtp
    command: run cron

  sentry_worker:
    restart: unless-stopped
    extends: sentry
    links:
      - sentry_memcached
      - sentry_redis
      - sentry_postgres
      - sentry_smtp
    command: run worker
